#调度标识名 集群中每一个实例都必须使用相同的名称
org.quartz.scheduler.instanceName=scheduler
#ID设置为自动获取 每一个必须不同
org.quartz.scheduler.instanceId=AUTO
org.quartz.scheduler.rmi.export=false
org.quartz.scheduler.rmi.proxy=false
# 覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况
org.quartz.scheduler.wrapJobExecutionInUserTransaction=false
#数据保存方式为持久化(必须设置两种数据源)
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreCMT
# quartz自己控制的数据源
org.quartz.jobStore.nonManagedTXDataSource=myjob
#数据库平台(不同数据库，driverDelegateClass不同)
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 数据库别名(spring和quartz一起事务控制的数据源，业务数据源)
org.quartz.jobStore.dataSource=myservice
#表的前缀
org.quartz.jobStore.tablePrefix=qrtz_
#设置为TRUE不会出现序列化非字符串类到 BLOB 时产生的类版本问题
org.quartz.jobStore.useProperties=true
#加入集群
org.quartz.jobStore.isClustered=true
#调度实例失效的检查时间间隔
org.quartz.jobStore.clusterCheckinInterval=20000
#容许的最大作业延长时间
org.quartz.jobStore.misfireThreshold=60000

#ThreadPool 实现的类名
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
#线程数量
org.quartz.threadPool.threadCount=10
#线程优先级
org.quartz.threadPool.threadPriority=5
#自创建父线程
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
org.quartz.threadpool.makethreadsdaemons=false
org.quartz.threadpool.threadsinheritgroupofinitializingthread=false
org.quartz.threadpool.threadnameprefix=swhJobThead

#设置数据源
org.quartz.dataSource.myjob.driver=com.mysql.cj.jdbc.Driver
org.quartz.dataSource.myjob.URL=jdbc:mysql://127.0.0.1:3306/myjob?useUnicode=true&characterEncoding=UTF-8&useSSL=false&&serverTimezone=GMT
org.quartz.dataSource.myjob.user=root
org.quartz.dataSource.myjob.password=123456
org.quartz.dataSource.myjob.maxConnections=30
# dataSource用于检测connection是否failed/corrupt的SQL语句
org.quartz.dataSource.myjob.validationQuery=select 1 from dual
org.quartz.dataSource.myjob.provider=hikaricp